========= PixelLight.Shader ==================

DESCRIPTION: A shader for normal mapped sprites. You can use it to test your albedo + normal outputs! 

PARAMETERS:
- Main Texture = Main Texture field. Leave it empty if using a 'Sprite Renderer' component.
- Normal Map = Normal Map for your sprite sheet. Use the _Normal ( the blue-red-green colorful one ) output texture from your AlbedoAndNormal render here.
- Light Intensity Factor = Scalar for the normal-mapped lighting component. Higher values result in more intense light and shadows.
- Universal Light Intensity Factor = Scaler Non-normal mapped lighting component. Higher values result in flatter lighting. 
- World size of one asset/texture pixel (1 / Asset PixelsPerUnit) = Auto-set during conversion based the advancedSettings 'spritePPU' value.
- Ignore map = If checked on, the Alpha component of the Normal Mapped will be sampled as a scalar for normal-mapped lighting. 

- Use Dithering = Toggles dithering
- Lookup pattern texture for dithering = Determines dithering pattern.
- Dither Power, Float) = Determines amount of dithering used.

========= PixelLightURP.shader =================

DESCRIPTION: A URP version of PixelLight. While the conversion tool itself only works in a built-in render pipeline project, you can use the outputs in a URP project, by using this shader for your materials.

PARAMETERS: Same parameters as the regular PixelLight shader.

======= PalletteSnapping.shader =============================

DESCRIPTION: Used during conversion to render with limited pallette. For each pixel, the closest color from the pallette is used. All values are set automatically during conversion

PARAMETERS: 
- Albedo = Source to limit pallette from.
- Pallette = Pallette texture containing all the colors we limit to. 1 Pixel per color, order doesn't matter.

- Use Ignore Map = Toggles usage of ignoreMap. The pallette replacement function is multiplied by the A field in the IgnoreMap texture. (Transparent ignoreMap pixel means no replacement happens on the corresponding pixel, fully opaque ingoreMap pixel means the corressponding pixel is fully replaced. )
- Ignore Map = Source for the Ignoring functionality (see above). Should be the same size as the Albedo texture. 

- Use Dithering = Toggles dithering
- Lookup pattern texture for dithering = Determines dithering pattern.
- Dither Power =Determines amount of dithering used.


======== NormalMapRendering.shader ==========================

DESCRIPTION: Used during conversion to render normal maps. Snaps normal value in a cell-shaded style based on lookup texture. You can change the lookup in 'BoneToPixSettings'; 
Other lookup versions are in SourceFiles/SamplingTextures.

PARAMETERS:
- MainTex = Source texture to apply cellShading to. 
- Cell shading lookup = Cell shading lookup.
- CellShadeNormal = Toggles cell shading directly applied to normal output.


========= FlatColorRendering.shader =========================

DESCRIPTION: Used in conversion. Simple shader for rendering flat color. 

PARAMETERS: 
- Albedo = Main texture for rendering.



========= CellShadedRendering.shader ========================

DESCRIPTION: Used in conversion. Simple shader with cell shaded-lighting. 

PARAMETERS:
- Albedo = Main texture for rendering.
- Lighting cell lookup = Lookup for cell lighting. Fewer colors result in chunkier looks.
- AmbientLight = Ambient light value. Higher values result in brighter sprites.


