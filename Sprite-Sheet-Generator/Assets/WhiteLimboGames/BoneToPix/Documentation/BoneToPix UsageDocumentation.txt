
Need extra help? Want to share your work with others? 
Join us on the BoneToPix Discord! 
Join Link: https://discord.gg/Wtz4F3XCEG

BONE_TO_PIX USAGE FOR ANIMATIONS:

	SETUP:
	1) Make sure you're running a built-in render pipeline project, NOT URP / HDRP. The converted sprites can be used in any type of project, and the included PixelLight shader comes with a URP version, but the conversion process itself has to happen in a built-in render pipeline project.
	2) Open the main conversion scene at SourceFiles/Scenes/Converter
	3) Import an animated model by dragging your file into the Unity Assets folder, in the 'Project' window. 
	4) Drag your imported model from the project window into the scene view, or into the Hierarchy.
	5) Select the BoneToPix Converter object in the scene hierarchy
	6) In the inspector, select your model in 'Conversion Target' field.

	CONVERTING: 
	1) Choose your preferred settings in the BoneToPix component.
	2) If you're using 'Cell-Lit' conversion mode or 'Generic Lighting', take some time to setup lighting in the scene. Do this by adding 'Point Light' and 'Directional' components to your scene, and play with their parameters.
	3) Press the 'Begin Converting Animation' Button
	4) Wait while your conversion is cooking! Make sure you keep Unity as your active window during this time, or the conversion will pause.
	5) Done! Check the output folder ( Default in Assets/WhiteLimboGames/BoneToPix/Output ) to see your finished sprites and animations.
	1) By default, the PalletteEditor will autolaunch to allow editing of your albedo spritesheet at the end of every boneToPixConversion. Can also be launched on its own from the top bar: Window > WhiteLimboGames > PalletteEditor

	PREVIEWING:
	1) Open an animation window using the 'ctrl+6' shortcut. 
	2) After conversion a preview GameObject with your animations is automatically generated. Find it at the bottom of the scene hierarchy, and select and center by double clicking it. 
	3) In the animation window, select one of your animations and hit play. Your animation will now play in the scene view!
	4) If you created a normal mapped output, make sure to add some point lights near your object as well. You can also change the properties on the objects generated material to play with the lighting amounts.


BONE_TO_PIX USAGE FOR SINGLE FRAMES: 
	By clicking the "Convert Single Frame" button on the main BoneToPix script, you can convert a single frame of whatever your selected camera si rendering. 
	This is useful if you'd like to convert multiple objects at once to create pixel-art environments or backgrounds. 

BONE_TO_PIX SETTINGS:
- Conversion Target = Target of conversion. Must be a scene object, not a prefab. After importing a model, drag it into the active scene and select it as target.
- AdvancedSettings = Advanced settings scriptable object. Double click to change.
- CellWidth = Output sprite width. ( Per frame of animation )
- CellHeight = Output sprite width. ( Per frame of animation )
- DrawOutline = Draw outline on output sprite.


---- PalletteType 
 * Auto-Generate = Auto Generates a limited pallette for you. Generated pallette is also saved to the output folder. You can choose the amount of colors. 
 * Don't use restricted Pallette = Doesn't restrict pallette. Just renders directly.
 * ManualPallette = Use your own pallette. Either draw one from scratch, or modify one of the pallettes created from Auto-Generate mode. Pallettes should be 1 pixel tall textures with 1 pixel for every color you want to use. Make sure filter-mode is set to "point", and compression to "none".     

---- LightingType 
 * Flat Color + Normal Maps = Generates a flat-color texture + a normal map texture. Use if you want to use your sprites in a game w/ dynamic lighting. You can use the included 'PixelLight' shader. 
 * Cell Shaded Lighting = Generates a lit cell-shaded color texture. ( Areas of light and shadow are chunkier, more painterly/cartoony look ) For a different look, you can change the cell-shading lookup in Advanced settings. 
 * Generic Lighting = Generates a lit color texture, with more generic lighting ( Light and shadow in smoother gradients ).


BONE_TO_PIX ADVANCED SETTINGS:

- Output Path = Base output path. ( Local starting from project assets folder )

- Auto-run Pallette Editor = Should BoneToPix auto-run the pallette editor on your converted sprite after conversion completes? The Pallette editor can also be run separately from Window > WhiteLimboGames > PalletteEditor

- Target framerate = Target framerate for the output animations. If the framerate of the generated animation is higher than the target, frames will be removed until hitting the target. If the output framerate is lower than the target, it will stay the same since there is not enough animation data to get to the target framerate

- SpritePPU = Output texture Pixels Per Unit. Bigger values result in one art pixel (texel) being smaller in world space.

- Filter Abs Color Threshold = Higher values make filter more permissive to noise. Lower values make it more strict against noise.
- Pallette Color Consolidation Threshold = Color difference threshold for 'consolidating' two colors in the generated pallette. When 2 similar colors get consolidated, the less used one is removed from the pallette.
- Use Filter = Stray/Orphan pixel filter


- Use Dithering = Toggle dithering on output preview material for Albedo/Normal conversions.
- Dithering Power = Influences the amount of dithering used.
- Dithering Matrix = Matrix/Lookup used for dithering; Influences dithering pattern. A few other options are available in 'SamplingTextures/DitheringLookups'

- Use Dithering For Pallette Snapping = In Pallette snapping, toggle dithering on output preview material for Albedo/Normal conversions; NOTE: Doesn't apply to albedo texture in albedo/normal conversions.
- Dithering Power For Pallette Snapping; = In Pallette snapping, influences the amount of dithering used.
- Dithering Lookup Texture For Pallette Snapping = In Pallette snapping, Matrix/Lookup used for dithering; Influences dithering pattern. A few other options are available in 'SamplingTextures/DitheringLookups';


- UseLightingOnOutline = When using outlines and doing an albedo/normal conversion, should the outline be affected by lighting?
- OutlineColor = Outline color;


- Cell Shade Normal Output = Apply cell shading directly to normalMap output.
- Normal Map Cell Shading Lookup = LookupTexture for normalMap cell shading. Fewer colors in the lookup result in a more cartoony/chunky look. Look in SourceFiles/LookupTextures for examples.
- Cell Shaded Lookup = Lookup texture for CellShaded Lighting conversions. Fewer colors result in chunkier looks. Look in SourceFiles/LookupTextures for examples.

- Allow Conversion In All Pipelines = Allows conversion to be run in all projects, regardlessa of render-pipeline. Note that this requires dynamically switching the active render pipeline asset.
- Also Create URP Material = Also create a URP material. Useful if you're using the converted sprites in a Unity URP project. The created preview sprite will still be using the built-in pipeline shader.

- Preview Material Highlights Intensity_BuiltIn = _Intensity value assigned to generated preview materials, for the default Built-In render pipeline version. Higher values result in sharper normal-mapped lighting.
- Preview Material Highlights Intensity_URP = _Intensity value assigned to generated preview materials, for the URP material version. Higher values result in sharper normal-mapped lighting.
- Preview Material Universal Intensity_BuiltIn = _Intensity2 value assigned to generated preview materials, for the default Built-In render pipeline version. Higher values result in over-all brighter sprites.
- Preview Material Universal Intensity_URP = _Intensity2 value assigned to generated preview materials, for the URP material version. Higher values result in over-all brighter sprites.

- Force Render Queue Value On Preview Materials = Determines wheter or not to apply a custom render queue value on output materials.
- Forced Render Queue Value = Value for forced render queue.

- Normal Map Material = Material used for normal map pass. Only change this if you know what you're doing.
- Albedo Material = Material used for solid color pass. Only change this if you know what you're doing.
- Cell Lit Material = Material used for cell-lit pass. Only change this if you know what you're doing.

- Dynamic Lit Shader = Shader used for preview objects in 'albedoAndNormal' passes. Only change this if you know what you're doing. 
- Dynamic Lit Shader_URP = The URP version of the above shader. 

- Snap Pallette Shader = Shader used for snapping pallette. Only change this if you know what you're doing.

- Pallette Sourcing Pose Angles = Angles used to render base for our pallette sourcing texture

- Show Extra Debug Information = Displays some extra information on conversion. 

PALLETTE_EDITOR SETTINGS:

- Color Replacement Sprite Shader = Reference to shader used to replace colors. Used for the blit that eventually gets drawn into the editor window. 



SUPPORT CONTACT: georgebsavu@gmail.com